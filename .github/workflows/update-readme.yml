name: Update README and publish

on:
  push:
    branches:
      - main

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Check if info.json changed
      id: check_changes
      run: |
          if git diff --name-only HEAD~1 HEAD | grep -q 'info.json'; then
            echo "info.json has changed."
            echo "CHANGED=true" >> $GITHUB_ENV          
          else
            echo "info.json has not changed."
            echo "CHANGED=false" >> $GITHUB_ENV          
          fi

    - name: Set up Node.js
      if: env.CHANGED == 'true'
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      if: env.CHANGED == 'true'
      run: npm install

    - name: give perrmission to execute bin file
      if: env.CHANGED == 'true'
      run: chmod +x ./read.js

    - name: Run command and update README
      if: env.CHANGED == 'true'
      run: |
        OUTPUT=$(npx ts-node ./read.js)
        echo "$OUTPUT"
        awk -v content="$OUTPUT" 'BEGIN {p=1} /<!-- output-start -->/ {print; p=0} p; /<!-- output-end -->/ {print "```json\n" content "\n```\n <!-- output-end -->"; p=1}' README.md > README.tmp && mv README.tmp README.md    
      
    - name: Commit and push changes
      if: env.CHANGED == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email github-actions@github.com
        git add README.md
        git commit -m 'Update README with latest JSON output' --no-verify
        git push

  publish:
    runs-on: ubuntu-latest
    needs: update-readme

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        registry-url: 'https://registry.npmjs.org/'

    - name: Update Branch
      run: git pull origin

    - name: Set execute permission for verify-version-file.sh
      run: chmod +x ./scripts/verify-version-file.sh

    - name: Install dependencies
      run: npm install

    - name: Read version type from file
      id: read_version
      run: echo "VERSION_TYPE=$(cat version-type.txt)" >> $GITHUB_ENV

    - name: Get previous version
      id: get_prev_version
      run: echo "PREV_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

    - name: Bump version and publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        VERSION_TYPE: ${{ env.VERSION_TYPE }}
      run: |
        # Atualiza a versão no package.json e package-lock.json
        NEW_VERSION=$(cat version-type.txt)
        npm version $NEW_VERSION --no-git-tag-version

        # Construa o projeto (se necessário)
        npm run build
        
        # Comita e envia a mudança de versão
        git config --global user.name 'github-actions[bot]'
        git config --global user.email github-actions@github.com
        git add --all
        git commit -m "Bump version from ${{ env.PREV_VERSION }} to $NEW_VERSION" --no-verify
        
        
        npm publish --registry=https://registry.npmjs.org/ --access=public

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ env.VERSION_TYPE }}
          release_name: Release ${{ env.VERSION_TYPE }}
          body: |
            Release ${{ env.VERSION_TYPE }}
            
    - name: Push changes
      run: |
              git tag v$(cat version-type.txt)
              git push origin main --tags